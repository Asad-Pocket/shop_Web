@model List<ItemDto>
@{
    Layout = "_Layout";
}

<h3 style="color : brown">Add New Item</h3>
<div class="col-12">
    <form asp-action="CreateItem" id="addItemForm" method="post">
        <div asp-validation-summary="All" class="text-danger"></div>
        <div class="col-12">
            <div class="row">
                <div class="col-md-4 mb-3">
                    <label class="form-label"><b>Enter Item Name</b></label>
                    <input id="item_name" type="text" class="form-control" placeholder="Enter Item Name">
                </div>
                <div class="col-md-4 mb-3">
                    <label class="form-label"><b>Enter Item Description</b></label>
                    <input id="item_des" type="text" class="form-control" placeholder="Enter Item Description">
                </div>
                <div class="col-md-4 mb-3">
                    <label class="form-label"><b>Enter Brand</b></label>
                    <input id="brand" type="text" class="form-control" placeholder="Enter Brand">
                </div>
            </div>
        </div>
        <div class="col">
            <div class="row">
                <div class="col-md-4 mb-3">
                    <label class="form-label"><b>Category ID</b></label>
                    <select class="form-control" id="cat_id" style="width: 100%;">
                        <option value="">Select A Category</option>
                    </select>
                </div>
                <div class="col-md-3 mb-3">
                    <label class="form-label"><b>Enter Unit Price</b></label>
                    <input id="unit_price" type="number" class="form-control" placeholder="Enter Unit Price">
                </div>
                <div class="col-md-3 mb-3">
                    <label class="form-label"><b>Enter Quantity</b></label>
                    <input id="qty" type="number" class="form-control" placeholder="Enter Quantity">
                </div>
                <div class="col-md-2 mt-2">
                    <button type="button" onclick="insertData()" class="btn btn-outline-primary mt-4">Save</button>
                    <button type="button" onclick="back()" class="btn btn-outline-primary mt-4">Back</button>
                </div>
            </div>
        </div>
       
    </form>
</div>

<div class="row m-0 ps-4 upper-form-style pt-2">
    <div class="col-12 text-center">
        <h3 style="color: brown; font-weight: 600;">Item List</h3>
    </div>
    <p></p>
    <div id="tableContainer" class="col-12"></div>
</div>

@section Scripts {
    <link href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/5.15.4/css/all.min.css" rel="stylesheet">
    <link href="https://unpkg.com/tabulator-tables@5.5.0/dist/css/tabulator.min.css" rel="stylesheet">
    <script type="text/javascript" src="https://unpkg.com/tabulator-tables@5.5.0/dist/js/tabulator.min.js"></script>
    <script src="https://code.jquery.com/jquery-3.6.4.min.js"></script>

    <script>
        $(document).ready(function () {
            GetCategories();
            initializeOrUpdateTable();

        });

        function initializeOrUpdateTable(){
            table = new Tabulator("#tableContainer", {
                data: @Html.Raw(Json.Serialize(Model)),
                layout: "fitColumns",
                pagination: true,
                paginationSize: 5,
                paginationCounter: "rows",
                columns: [
                    { title: "Item ID", field: "item_id", hozAlign: "center",visible:false },
                    { title: "Name", field: "item_name", headerFilter: "input", headerFilterLiveFilter: true, hozAlign: "center" },
                    { title: "Description", field: "item_des", hozAlign: "center", },
                    { title: "Category", field: "cat_name", hozAlign: "center",headerFilter: "input",headerFilterLiveFilter: true },
                    { title: "Brand", field: "brand", hozAlign: "center",headerFilter: "input", headerFilterLiveFilter: true },
                    { title: "Unit Price", field: "unit_price", hozAlign: "center" },
                    { title: "Quantity", field: "qty", hozAlign: "center" },
                    {
                        title: "Actions",
                        formatter: function (cell, formatterParams, onRendered) {
                            var rowData = cell.getRow().getData();

                            var actionContainer = document.createElement("div");
                            actionContainer.className = "text-nowrap";

                            // Edit Button
                            var editSpan = document.createElement("span");
                            editSpan.setAttribute("data-toggle", "tooltip");
                            editSpan.setAttribute("title", "Edit");

                            var editButton = document.createElement("button");
                            editButton.className = "fas fa-edit btn btn-warning btn-xs";
                            editButton.onclick = function () {
                                editRow(rowData.item_id);
                            };
                            editSpan.appendChild(editButton);
                            actionContainer.appendChild(editSpan);

                            actionContainer.appendChild(document.createTextNode("\u00A0\u00A0"));

                            // Delete Button
                            var deleteSpan = document.createElement("span");
                            deleteSpan.setAttribute("data-toggle", "tooltip");
                            deleteSpan.setAttribute("title", "Delete");

                            var deleteButton = document.createElement("button");
                            deleteButton.className = "far fa-trash-alt btn btn-danger btn-xs";
                            deleteButton.onclick = function () {
                                deleteRow(rowData.item_id);
                            };
                            deleteSpan.appendChild(deleteButton);
                            actionContainer.appendChild(deleteSpan);

                            return actionContainer;
                        },
                        hozAlign: "center",
                        width: 120,
                    },
                ],
            });
        }

        // Fetch categories via AJAX and populate the dropdown
        function GetCategories() {
            $.ajax({
                url: '/Item/GetCategories',
                method: 'GET',
                success: function (response) {
                    $('#cat_id').empty(); // Clear previous options
                    $('#cat_id').append('<option value="">Select A Category</option>'); // Default option
                    $.each(response, function (index, category) {
                        $('#cat_id').append('<option value="' + category.cat_id + '">' + category.cat_name + '</option>');
                    });
                },
                error: function (error) {
                    alert("Error loading categories: " + error.responseText);
                }
            });
        }

        function insertData() {
            var itemName = $("#item_name").val();
            var cat_id = $("#cat_id").val();
            var itemDes = $("#item_des").val();
            var brand = $("#brand").val();
            var unitPrice = $("#unit_price").val();
            var qty = $("#qty").val();

            if (cat_id.trim() === "" || itemName.trim() === "" || itemDes.trim() === "" || brand.trim() === "" || unitPrice.trim() === "" || qty.trim() === "") {
                alert("All fields must be filled out");
                return; // Exit function early
            }

            $.ajax({
                url: '/Item/Create',
                method: 'POST',
                data: {
                    cat_id: cat_id,
                    item_name: itemName,
                    item_des: itemDes,
                    brand: brand,
                    unit_price: unitPrice,
                    qty: qty,
                },
                success: function () {
                    initializeOrUpdateTable();
                    window.location.href = 'Item';
                },
                error: function (error) {
                    console.error('Error data:', error);
                }
            });
        }

        function editRow(id) {
            var itemId = id;
            window.location.href = '/Item/Edit?item_id=' + itemId;
        }

        function deleteRow(id) {
            var confirmation = confirm("Are you sure you want to delete?");
            if (confirmation) {
                $.ajax({
                    url: '/Item/Delete',
                    method: 'POST',
                    data: {
                        item_id: id,
                    },
                    success: function () {
                        alert("Item deleted successfully");
                        initializeOrUpdateTable();
                        window.location.href = 'Item';
                    },
                    error: function (error) {
                        console.error('Error data:', error);
                    }
                });
            }
        }
        function back() {
            window.history.back();
        }

    </script>
}
@{
    await Html.RenderPartialAsync("_ValidationScriptsPartial");
}
